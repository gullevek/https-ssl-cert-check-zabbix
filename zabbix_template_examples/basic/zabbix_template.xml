<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>5.0</version>
    <date>2023-06-20T01:42:25Z</date>
    <groups>
        <group>
            <name>Templates/Applications</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>Template Web SSL Certificate Monitor</template>
            <name>Template Web SSL Certificate Monitor</name>
            <groups>
                <group>
                    <name>Templates/Applications</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Certificates</name>
                </application>
                <application>
                    <name>SSL</name>
                </application>
                <application>
                    <name>SSL Expire</name>
                </application>
                <application>
                    <name>SSL Valid</name>
                </application>
                <application>
                    <name>Zabbix raw items</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>ssl expires</name>
                    <type>DEPENDENT</type>
                    <key>ssl_cert_check_json.expire_days</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>30d</trends>
                    <units>d</units>
                    <applications>
                        <application>
                            <name>SSL</name>
                        </application>
                        <application>
                            <name>SSL Expire</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.expire_days</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>ssl_cert_check_json[{$SSL_CHECK_SCRIPT_PATH},{$IPADDR},{$SSLPORT},{$SSLDOMAIN},{$TIMEOUT}]</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{last(#3,3)}&lt;0</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{last(#3,3)}&gt;={$EXPIRESWITHIN}</recovery_expression>
                            <name>Certificate expired since {ITEM.VALUE} days!</name>
                            <priority>DISASTER</priority>
                        </trigger>
                        <trigger>
                            <expression>{last(#3,3)}&lt;{$EXPIRESWITHIN_CRITICAL}&#13;
and&#13;
{last(#3,3)}&gt;=0</expression>
                            <name>Certificate expires soon, {ITEM.VALUE} days left</name>
                            <priority>HIGH</priority>
                        </trigger>
                        <trigger>
                            <expression>{last(#3,3)}&lt;{$EXPIRESWITHIN}&#13;
and&#13;
{last(#3,3)}&gt;={$EXPIRESWITHIN_CRITICAL}</expression>
                            <name>Certificate expires soon, {ITEM.VALUE} days left</name>
                            <priority>WARNING</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>ssl fingerprint</name>
                    <type>DEPENDENT</type>
                    <key>ssl_cert_check_json.fingerprint</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>SSL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.fingerprint</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>ssl_cert_check_json[{$SSL_CHECK_SCRIPT_PATH},{$IPADDR},{$SSLPORT},{$SSLDOMAIN},{$TIMEOUT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>ssl issuer</name>
                    <type>DEPENDENT</type>
                    <key>ssl_cert_check_json.issuer</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <description>Issuer info, as eg:&#13;
C = US, O = Let's Encrypt, CN = R3</description>
                    <applications>
                        <application>
                            <name>SSL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.issuer</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>ssl_cert_check_json[{$SSL_CHECK_SCRIPT_PATH},{$IPADDR},{$SSLPORT},{$SSLDOMAIN},{$TIMEOUT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>ssl valid not after</name>
                    <type>DEPENDENT</type>
                    <key>ssl_cert_check_json.notAfter</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <description>Note: expired_days is based on this value</description>
                    <applications>
                        <application>
                            <name>SSL</name>
                        </application>
                        <application>
                            <name>SSL Expire</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.notAfter</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>ssl_cert_check_json[{$SSL_CHECK_SCRIPT_PATH},{$IPADDR},{$SSLPORT},{$SSLDOMAIN},{$TIMEOUT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>ssl valid not before</name>
                    <type>DEPENDENT</type>
                    <key>ssl_cert_check_json.notBefore</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>SSL</name>
                        </application>
                        <application>
                            <name>SSL Expire</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.notBefore</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>ssl_cert_check_json[{$SSL_CHECK_SCRIPT_PATH},{$IPADDR},{$SSLPORT},{$SSLDOMAIN},{$TIMEOUT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>ssl return code</name>
                    <type>DEPENDENT</type>
                    <key>ssl_cert_check_json.return_code</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>30d</trends>
                    <applications>
                        <application>
                            <name>SSL</name>
                        </application>
                        <application>
                            <name>SSL Valid</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.return_code</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>ssl_cert_check_json[{$SSL_CHECK_SCRIPT_PATH},{$IPADDR},{$SSLPORT},{$SSLDOMAIN},{$TIMEOUT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>ssl return text</name>
                    <type>DEPENDENT</type>
                    <key>ssl_cert_check_json.return_text</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <description>Return code detail information</description>
                    <applications>
                        <application>
                            <name>SSL</name>
                        </application>
                        <application>
                            <name>SSL Valid</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.return_text</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>ssl_cert_check_json[{$SSL_CHECK_SCRIPT_PATH},{$IPADDR},{$SSLPORT},{$SSLDOMAIN},{$TIMEOUT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>ssl serial</name>
                    <type>DEPENDENT</type>
                    <key>ssl_cert_check_json.serial</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>SSL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.serial</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>ssl_cert_check_json[{$SSL_CHECK_SCRIPT_PATH},{$IPADDR},{$SSLPORT},{$SSLDOMAIN},{$TIMEOUT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>ssl signature algorithm</name>
                    <type>DEPENDENT</type>
                    <key>ssl_cert_check_json.signatureAlgorithm</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <description>x509 Signature Algorithm</description>
                    <applications>
                        <application>
                            <name>SSL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.signatureAlgorithm</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>ssl_cert_check_json[{$SSL_CHECK_SCRIPT_PATH},{$IPADDR},{$SSLPORT},{$SSLDOMAIN},{$TIMEOUT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>ssl subject</name>
                    <type>DEPENDENT</type>
                    <key>ssl_cert_check_json.subject</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <description>The main subject</description>
                    <applications>
                        <application>
                            <name>SSL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.subject</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>ssl_cert_check_json[{$SSL_CHECK_SCRIPT_PATH},{$IPADDR},{$SSLPORT},{$SSLDOMAIN},{$TIMEOUT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>ssl alternative names</name>
                    <type>DEPENDENT</type>
                    <key>ssl_cert_check_json.subjectAlternativeNames</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <description>Comma separated list for alternative SSL names</description>
                    <applications>
                        <application>
                            <name>SSL</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.subjectAlternativeNames</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>ssl_cert_check_json[{$SSL_CHECK_SCRIPT_PATH},{$IPADDR},{$SSLPORT},{$SSLDOMAIN},{$TIMEOUT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>ssl valid</name>
                    <type>DEPENDENT</type>
                    <key>ssl_cert_check_json.valid</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>30d</trends>
                    <applications>
                        <application>
                            <name>SSL</name>
                        </application>
                        <application>
                            <name>SSL Valid</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>SSL valid state</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.valid</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>ssl_cert_check_json[{$SSL_CHECK_SCRIPT_PATH},{$IPADDR},{$SSLPORT},{$SSLDOMAIN},{$TIMEOUT}]</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{last(#3,5)}=0</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{last(#3,5)}=1</recovery_expression>
                            <name>Certificate validation failed</name>
                            <priority>WARNING</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>ssl wildcard</name>
                    <type>DEPENDENT</type>
                    <key>ssl_cert_check_json.wildcard</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>30d</trends>
                    <applications>
                        <application>
                            <name>SSL</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Yes/No</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.wildcard</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>ssl_cert_check_json[{$SSL_CHECK_SCRIPT_PATH},{$IPADDR},{$SSLPORT},{$SSLDOMAIN},{$TIMEOUT}]</key>
                    </master_item>
                </item>
                <item>
                    <name>JSON Get [ssl cert info]</name>
                    <key>ssl_cert_check_json[{$SSL_CHECK_SCRIPT_PATH},{$IPADDR},{$SSLPORT},{$SSLDOMAIN},{$TIMEOUT}]</key>
                    <delay>{$UPDATEINTERVAL}</delay>
                    <history>1d</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>Zabbix raw items</name>
                        </application>
                    </applications>
                </item>
            </items>
            <macros>
                <macro>
                    <macro>{$EXPIRESWITHIN}</macro>
                    <value>30</value>
                    <description>Number of days before the expiration of the certificate.</description>
                </macro>
                <macro>
                    <macro>{$EXPIRESWITHIN_CRITICAL}</macro>
                    <value>7</value>
                    <description>Number of days before we have a critical alert for certificate exppiration</description>
                </macro>
                <macro>
                    <macro>{$IPADDR}</macro>
                    <value>140.82.121.4</value>
                    <description>Server IP address</description>
                </macro>
                <macro>
                    <macro>{$SSLDOMAIN}</macro>
                    <value>github.com</value>
                    <description>Domain name</description>
                </macro>
                <macro>
                    <macro>{$SSLPORT}</macro>
                    <value>443</value>
                    <description>SSL port</description>
                </macro>
                <macro>
                    <macro>{$SSL_CHECK_SCRIPT_PATH}</macro>
                    <value>/usr/local/bin/</value>
                    <description>full path to the check ssl cert script</description>
                </macro>
                <macro>
                    <macro>{$TIMEOUT}</macro>
                    <value>10</value>
                    <description>Timeout</description>
                </macro>
                <macro>
                    <macro>{$UPDATEINTERVAL}</macro>
                    <value>12h</value>
                    <description>How often to update certificate information</description>
                </macro>
            </macros>
        </template>
    </templates>
    <value_maps>
        <value_map>
            <name>SSL valid state</name>
            <mappings>
                <mapping>
                    <value>-1</value>
                    <newvalue>Not checked</newvalue>
                </mapping>
                <mapping>
                    <value>0</value>
                    <newvalue>Invalid</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>Valid</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>Yes/No</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>No</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>Yes</newvalue>
                </mapping>
            </mappings>
        </value_map>
    </value_maps>
</zabbix_export>
